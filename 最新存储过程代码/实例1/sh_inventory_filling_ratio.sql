CREATE DEFINER=`feprocess`@`%` PROCEDURE `sh_inventory_filling_ratio`()
    SQL SECURITY INVOKER
BEGIN
SET @run_date := CURRENT_DATE(),@user := CURRENT_USER(),@timestamp := CURRENT_TIMESTAMP();
  SET @sdate := CURRENT_DATE;
  SET @sdate3 := SUBDATE(@sdate, 0),
  @sdate2 := SUBDATE(@sdate, 1),
  @sdate1 := SUBDATE(@sdate, 2);
  SET @d3 := DAY(@sdate3),
  @d2 := DAY(@sdate2),
  @d1 := DAY(@sdate1),
  @y_m3 := DATE_FORMAT(@sdate3, '%Y-%m'),
  @y_m2 := DATE_FORMAT(@sdate2, '%Y-%m'),
  @y_m1 := DATE_FORMAT(@sdate1, '%Y-%m');
  
  DELETE
  FROM
    feods.pj_inventory_filling_ratio
  WHERE sdate = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY);
  
  set @time_2 := CURRENT_TIMESTAMP();
  
  SET @str := CONCAT(
    " INSERT INTO feods.pj_inventory_filling_ratio ( ",
    "     sdate, ",
    "     cityname, ",
    "     shelf_id, ",
    "     SHELF_TYPE, ",
    "     SHELF_NAME, ",
    "     stknum, ",
    "     skunum, ",
    "     maxqty, ",
    "     qtyonway, ",
    "     day1, ",
    "     day2, ",
    "     day3, ",
    "     day1_qty, ",
    "     day2_qty, ",
    "     day3_qty ",
    "   ) ",
    "   SELECT ",
    "     DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) AS sdate, ",
    "     SUBSTRING_INDEX( ",
    "       SUBSTRING_INDEX(a.AREA_ADDRESS, ',', 2), ",
    "       ',', ",
    "       - 1 ",
    "     ) AS city_name, ",
    "     a.shelf_id, ",
    "     a.SHELF_TYPE, ",
    "     a.SHELF_NAME, ",
    "     b.stknum, ",
    "     b.skunum, ",
    "     b.maxqty, ",
    "     c.qtyonway, ",
    "     d.day1, ",
    "     d.day2, ",
    "     d.day3, ",
    "     day1_qty, ",
    "     day2_qty, ",
    "     day3_qty ",
    "   FROM ",
    "     fe.sf_shelf AS a ",
    "     LEFT JOIN ",
    "       (SELECT ",
    "         shelf_id, ",
    "         SUM(stock_quantity) AS stknum, ",
    "         IF( ",
    "           SUM(MAX_QUANTITY) > 200, ",
    "           200, ",
    "           SUM(MAX_QUANTITY) ",
    "         ) AS maxqty, ",
    "         COUNT(DISTINCT PRODUCT_ID) AS skunum ",
    "       FROM ",
    "         fe.sf_shelf_product_detail ",
    "       GROUP BY SHELF_ID) AS b ",
    "       ON b.SHELF_ID = a.SHELF_ID ",
    "     LEFT JOIN ",
    "       (SELECT ",
    "         a.shelf_id AS shelf_id, ",
    "         b.actsend AS qtyonway ",
    "       FROM ",
    "         fe.sf_product_fill_order AS a ",
    "         LEFT JOIN ",
    "           (SELECT ",
    "             order_id, ",
    "             SUM(ACTUAL_SEND_NUM) AS actsend ",
    "           FROM ",
    "             fe.sf_product_fill_order_item ",
    "           GROUP BY order_id) AS b ",
    "           ON b.order_id = a.order_id ",
    "       WHERE a.order_status IN (1, 2) ",
    "       GROUP BY a.SHELF_ID) AS c ",
    "       ON c.shelf_id = a.shelf_id ",
    "     LEFT JOIN ",
    "       (SELECT ",
    "         shelf_id, ",
    "         SUM(day1) AS day1, ",
    "         SUM(day2) AS day2, ",
    "         SUM(day3) AS day3, ",
    "         SUM(day1_qty) AS day1_qty, ",
    "         SUM(day2_qty) AS day2_qty, ",
    "         SUM(day3_qty) AS day3_qty ",
    "       FROM ",
    "         (SELECT ",
    "           shelf_id, ",
    "           SUM(DAY",
    @d3,
    "_QUANTITY) AS day1, ",
    "           0 AS day2, ",
    "           0 AS day3, ",
    "           COUNT( ",
    "             DISTINCT ",
    "             CASE ",
    "               WHEN DAY",
    @d3,
    "_QUANTITY > 0 ",
    "               THEN product_id ",
    "             END ",
    "           ) AS day1_qty, ",
    "           0 AS day2_qty, ",
    "           0 AS day3_qty ",
    "         FROM ",
    "           fe.sf_shelf_product_stock_detail ",
    "         WHERE stat_date = @y_m3 ",
    "         GROUP BY shelf_id ",
    "         UNION ",
    "         SELECT ",
    "           shelf_id, ",
    "           0 AS day1, ",
    "           SUM(DAY",
    @d2,
    "_QUANTITY) AS day2, ",
    "           0 AS day3, ",
    "           0 AS day1_qty, ",
    "           COUNT( ",
    "             DISTINCT ",
    "             CASE ",
    "               WHEN DAY",
    @d2,
    "_QUANTITY > 0 ",
    "               THEN product_id ",
    "             END ",
    "           ) AS day2_qty, ",
    "           0 AS day3_qty ",
    "         FROM ",
    "           fe.sf_shelf_product_stock_detail ",
    "         WHERE stat_date = @y_m2 ",
    "         GROUP BY shelf_id ",
    "         UNION ",
    "         SELECT ",
    "           shelf_id, ",
    "           0 AS day1, ",
    "           0 AS day2, ",
    "           SUM(DAY",
    @d1,
    "_QUANTITY) AS day3, ",
    "           0 AS day1_qty, ",
    "           0 AS day2_qty, ",
    "           COUNT( ",
    "             DISTINCT ",
    "             CASE ",
    "               WHEN DAY",
    @d1,
    "_QUANTITY > 0 ",
    "               THEN product_id ",
    "             END ",
    "           ) AS day3_qty ",
    "         FROM ",
    "           fe.sf_shelf_product_stock_detail ",
    "         WHERE stat_date = @y_m1 ",
    "         GROUP BY shelf_id) t1 ",
    "       GROUP BY shelf_id) d ",
    "       ON a.shelf_id = d.shelf_id ",
    "   WHERE a.shelf_type IN (1, 2, 3, 5) ",
    "     AND a.SHELF_STATUS = 2 ",
    "   GROUP BY a.shelf_id; "
  );
  PREPARE str_exe FROM @str;
  EXECUTE str_exe;
  
set @time_3 := CURRENT_TIMESTAMP();
call sh_process.sql_log_info("sh_inventory_filling_ratio","@time_2--@time_3",@time_2,@time_3);
  
-- 执行记录日志
CALL sh_process.`sp_sf_dw_task_log` (
'sh_inventory_filling_ratio',
DATE_FORMAT(@run_date, '%Y-%m-%d'),
 CONCAT('未知@', @user, @timestamp));  
  
  COMMIT;
END